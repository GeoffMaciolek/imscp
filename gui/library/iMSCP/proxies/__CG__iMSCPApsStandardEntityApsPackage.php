<?php

namespace iMSCP\Proxies\__CG__\iMSCP\ApsStandard\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class ApsPackage extends \iMSCP\ApsStandard\Entity\ApsPackage implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'iMSCP\\ApsStandard\\Entity\\ApsPackage' . "\0" . 'id', '' . "\0" . 'iMSCP\\ApsStandard\\Entity\\ApsPackage' . "\0" . 'name', '' . "\0" . 'iMSCP\\ApsStandard\\Entity\\ApsPackage' . "\0" . 'summary', '' . "\0" . 'iMSCP\\ApsStandard\\Entity\\ApsPackage' . "\0" . 'version', '' . "\0" . 'iMSCP\\ApsStandard\\Entity\\ApsPackage' . "\0" . 'release', '' . "\0" . 'iMSCP\\ApsStandard\\Entity\\ApsPackage' . "\0" . 'apsVersion', '' . "\0" . 'iMSCP\\ApsStandard\\Entity\\ApsPackage' . "\0" . 'category', '' . "\0" . 'iMSCP\\ApsStandard\\Entity\\ApsPackage' . "\0" . 'vendor', '' . "\0" . 'iMSCP\\ApsStandard\\Entity\\ApsPackage' . "\0" . 'vendorUri', '' . "\0" . 'iMSCP\\ApsStandard\\Entity\\ApsPackage' . "\0" . 'url', '' . "\0" . 'iMSCP\\ApsStandard\\Entity\\ApsPackage' . "\0" . 'iconUrl', '' . "\0" . 'iMSCP\\ApsStandard\\Entity\\ApsPackage' . "\0" . 'cert', '' . "\0" . 'iMSCP\\ApsStandard\\Entity\\ApsPackage' . "\0" . 'status');
        }

        return array('__isInitialized__', '' . "\0" . 'iMSCP\\ApsStandard\\Entity\\ApsPackage' . "\0" . 'id', '' . "\0" . 'iMSCP\\ApsStandard\\Entity\\ApsPackage' . "\0" . 'name', '' . "\0" . 'iMSCP\\ApsStandard\\Entity\\ApsPackage' . "\0" . 'summary', '' . "\0" . 'iMSCP\\ApsStandard\\Entity\\ApsPackage' . "\0" . 'version', '' . "\0" . 'iMSCP\\ApsStandard\\Entity\\ApsPackage' . "\0" . 'release', '' . "\0" . 'iMSCP\\ApsStandard\\Entity\\ApsPackage' . "\0" . 'apsVersion', '' . "\0" . 'iMSCP\\ApsStandard\\Entity\\ApsPackage' . "\0" . 'category', '' . "\0" . 'iMSCP\\ApsStandard\\Entity\\ApsPackage' . "\0" . 'vendor', '' . "\0" . 'iMSCP\\ApsStandard\\Entity\\ApsPackage' . "\0" . 'vendorUri', '' . "\0" . 'iMSCP\\ApsStandard\\Entity\\ApsPackage' . "\0" . 'url', '' . "\0" . 'iMSCP\\ApsStandard\\Entity\\ApsPackage' . "\0" . 'iconUrl', '' . "\0" . 'iMSCP\\ApsStandard\\Entity\\ApsPackage' . "\0" . 'cert', '' . "\0" . 'iMSCP\\ApsStandard\\Entity\\ApsPackage' . "\0" . 'status');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (ApsPackage $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setSummary($summary)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSummary', array($summary));

        return parent::setSummary($summary);
    }

    /**
     * {@inheritDoc}
     */
    public function getSummary()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSummary', array());

        return parent::getSummary();
    }

    /**
     * {@inheritDoc}
     */
    public function setVersion($version)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVersion', array($version));

        return parent::setVersion($version);
    }

    /**
     * {@inheritDoc}
     */
    public function getVersion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVersion', array());

        return parent::getVersion();
    }

    /**
     * {@inheritDoc}
     */
    public function setRelease($release)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRelease', array($release));

        return parent::setRelease($release);
    }

    /**
     * {@inheritDoc}
     */
    public function getRelease()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRelease', array());

        return parent::getRelease();
    }

    /**
     * {@inheritDoc}
     */
    public function setApsVersion($apsVersion)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setApsVersion', array($apsVersion));

        return parent::setApsVersion($apsVersion);
    }

    /**
     * {@inheritDoc}
     */
    public function getApsVersion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getApsVersion', array());

        return parent::getApsVersion();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategory($category)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategory', array($category));

        return parent::setCategory($category);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategory', array());

        return parent::getCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function setVendor($vendor)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVendor', array($vendor));

        return parent::setVendor($vendor);
    }

    /**
     * {@inheritDoc}
     */
    public function getVendor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVendor', array());

        return parent::getVendor();
    }

    /**
     * {@inheritDoc}
     */
    public function setVendorUri($vendorUri)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVendorUri', array($vendorUri));

        return parent::setVendorUri($vendorUri);
    }

    /**
     * {@inheritDoc}
     */
    public function getVendorUri()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVendorUri', array());

        return parent::getVendorUri();
    }

    /**
     * {@inheritDoc}
     */
    public function setUrl($url)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUrl', array($url));

        return parent::setUrl($url);
    }

    /**
     * {@inheritDoc}
     */
    public function getUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUrl', array());

        return parent::getUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setIconUrl($iconUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIconUrl', array($iconUrl));

        return parent::setIconUrl($iconUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getIconUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIconUrl', array());

        return parent::getIconUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setCert($cert)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCert', array($cert));

        return parent::setCert($cert);
    }

    /**
     * {@inheritDoc}
     */
    public function getCert()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCert', array());

        return parent::getCert();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', array($status));

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', array());

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function isLocked()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isLocked', array());

        return parent::isLocked();
    }

    /**
     * {@inheritDoc}
     */
    public function isUnlocked()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isUnlocked', array());

        return parent::isUnlocked();
    }

    /**
     * {@inheritDoc}
     */
    public function isOutdated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isOutdated', array());

        return parent::isOutdated();
    }

    /**
     * {@inheritDoc}
     */
    public function isObsolete()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isObsolete', array());

        return parent::isObsolete();
    }

}
